name: Deploy frontend web app to Production
on:
  push:
    branches:
      - chore/sc-19/set-up-github-actions-for-deployment

jobs:

  build:
    name: Build with Vite
    runs-on: ubuntu-latest
    environment: production
    defaults:
      run:
        shell: bash
        # the working-directory only works for "run:" statements
        working-directory: ./frontend

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: npm install

      - name: Define Version Name
        run: |
          VERSION_NAME="${{ github.event.release.tag_name }}-$(date +'%Y%m%d')"
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Build
        env:
          VITE_DATA_DATE: ${{ vars.VITE_DATA_DATE }}
          VITE_DATA_URL: ${{ vars.VITE_DATA_URL }}
          VITE_MAPBOX_API_TOKEN: ${{ secrets.VITE_MAPBOX_API_TOKEN }}
          VITE_APP_VERSION: $VERSION_NAME
        run: npm run build

      - name: Archive Production Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.VERSION_NAME }}
          path: frontend/dist

  deploy:
    name: Deploy to S3
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Deploy static site to S3 bucket
        run: aws s3 sync frontend/dist s3://www.childcaremap.ca --delete

  clean-cache:
    name: Clean CloudFront cache
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Invalidate CloudFront distribution
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_FRONTEND_DIST_ID }} --paths "/*"
